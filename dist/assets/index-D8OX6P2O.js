(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function i(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=i(n);fetch(n.href,s)}})();function l(t){if(t instanceof HTMLElement)return t;throw new Error(`Expected typeof input=${typeof t} to be an HTMLElement.`)}function c(t){if(t instanceof HTMLInputElement)return t;throw new Error(`Expected typeof input=${typeof t} to be an HTMLInputElement.`)}function a(t){throw new Error(`checkExhaustivelyHandled called with typeof input=${typeof t}. There's a type issue somewhere.`)}function m(){return[...document.querySelectorAll('#timer-display > input[id*="digit"]')].map(i=>c(i))}function d(t){m().forEach(e=>{e.readOnly=t})}function D(){let t=0;for(const e of m()){const i=Number(e.value),r=Number(e.dataset.multiplier);t=t+i*r}return t}function I(t){switch(t){case"hour-digit-tens":case"hour-digit-ones":case"minute-digit-tens":case"minute-digit-ones":case"second-digit-tens":case"second-digit-ones":case"millisecond-digit-hundreds":case"millisecond-digit-tens":case"millisecond-digit-ones":return t;default:throw new Error(`Expected input to be a valid InputDigitId, but got ${t}`)}}function M(t){switch(t){case"hour-digit-tens":return"hour-digit-ones";case"hour-digit-ones":return"minute-digit-tens";case"minute-digit-tens":return"minute-digit-ones";case"minute-digit-ones":return"second-digit-tens";case"second-digit-tens":return"second-digit-ones";case"second-digit-ones":return"millisecond-digit-hundreds";case"millisecond-digit-hundreds":return"millisecond-digit-tens";case"millisecond-digit-tens":return"millisecond-digit-ones";case"millisecond-digit-ones":return"start-timer";default:a(t)}}const g=1e3*60*60*10,h=1e3*60*60,f=1e3*60*10,p=1e3*60,_=1e3*10,T=1e3;function S(t){let e=t,i=0;e>=g&&(i=Math.floor(e/g),e=e%g);let r=0;e>=h&&(r=Math.floor(e/h),e=e%h);let n=0;e>=f&&(n=Math.floor(e/f),e=e%f);let s=0;e>=p&&(s=Math.floor(e/p),e=e%p);let o=0;e>=_&&(o=Math.floor(e/_),e=e%_);let u=0;e>=T&&(u=Math.floor(e/T),e=e%T);let y=0;e>=100&&(y=Math.floor(e/100),e=e%100);let E=0;e>=10&&(E=Math.floor(e/10),e=e%10);let b=0;return e>=1&&(b=e),{hourDigitTens:i,hourDigitOnes:r,minuteDigitTens:n,minuteDigitOnes:s,secondDigitTens:o,secondDigitOnes:u,millisecondDigitHundreds:y,millisecondDigitTens:E,millisecondDigitOnes:b}}const v=new Map([["hourDigitTens","hour-digit-tens"],["hourDigitOnes","hour-digit-ones"],["minuteDigitTens","minute-digit-tens"],["minuteDigitOnes","minute-digit-ones"],["secondDigitTens","second-digit-tens"],["secondDigitOnes","second-digit-ones"],["millisecondDigitHundreds","millisecond-digit-hundreds"],["millisecondDigitTens","millisecond-digit-tens"],["millisecondDigitOnes","millisecond-digit-ones"]]);function w(t,e){switch(t.type){case"running":case"not_running_with_time_remaining":return t.remainingMs-e;case"not_running_no_time_remaining":throw new Error("We should not be getting the remaining milliseconds when there's no time remaining");default:return a(t)}}function O(){const t=document.querySelector(".times-up-overlay");if(t)t.classList.remove("hidden"),t.removeAttribute("aria-hidden");else throw new Error(`Expected to find an overlay element but found overlay=${t}`)}function B(){const t=document.querySelector(".times-up-overlay");if(t)t.classList.add("hidden"),t.setAttribute("aria-hidden","true");else throw new Error(`Expected to find an overlay element but found overlay=${t}`)}class L{constructor(){this.MAX_TIMEOUT_MS=50,this.MIN_TIMEOUT_MS=10,this.interval=void 0,this.allowOnlyDigits=i=>{(i.key.length===1&&!"0123456789".includes(i.key)||[" ","Enter","Backspace","Delete"].includes(i.key))&&i.preventDefault()},this.onDigitInput=i=>{const r=c(i.target);switch(this.timerState.type){case"running":return;case"not_running_with_time_remaining":case"not_running_no_time_remaining":this.timerState={type:"not_running_with_time_remaining",remainingMs:D()};break;default:a(this.timerState)}const n=r.id,s=M(I(n));l(document.querySelector(`#${s}`)).focus(),this.enableStartTimerButton(),this.enableResetTimerButton(),m().every(u=>u.value==="0")&&this.disableControlButtons()},this.getStartTimerButton().addEventListener("click",()=>{const i=Math.floor(Math.random()*(this.MAX_TIMEOUT_MS-this.MIN_TIMEOUT_MS+1)+this.MIN_TIMEOUT_MS);this.startTimer(i)}),this.getPauseTimerButton().addEventListener("click",()=>{this.pauseTimer()}),this.getResetTimerButton().addEventListener("click",()=>{this.resetTimer()});for(const i of m())i.addEventListener("keydown",this.allowOnlyDigits),i.addEventListener("input",this.onDigitInput);[...document.querySelectorAll('#timer-display input[type="number"]')].map(i=>c(i)).forEach(i=>{i.addEventListener("focus",function(){i.select()})}),this.disableControlButtons();const e=document.querySelector(".times-up-overlay-ok-button");if(e)e.addEventListener("click",B);else throw new Error(`Expected to find a #times-up-ok element but found timesUpOk=${e}. `);this.timerState={type:"not_running_no_time_remaining"}}getStartTimerButton(){return l(document.querySelector("#start-timer"))}enableStartTimerButton(){this.getStartTimerButton().removeAttribute("disabled")}disableStartTimerButton(){this.getStartTimerButton().setAttribute("disabled","true")}getPauseTimerButton(){return l(document.querySelector("#pause-timer"))}enablePauseTimerButton(){this.getPauseTimerButton().removeAttribute("disabled")}disablePauseTimerButton(){this.getPauseTimerButton().setAttribute("disabled","true")}getResetTimerButton(){return l(document.querySelector("#reset-timer"))}enableResetTimerButton(){this.getResetTimerButton().removeAttribute("disabled")}disableResetTimerButton(){this.getResetTimerButton().setAttribute("disabled","true")}disableControlButtons(){this.disableStartTimerButton(),this.disablePauseTimerButton(),this.disableResetTimerButton()}startTimer(e){d(!0),this.disableStartTimerButton(),this.enablePauseTimerButton(),this.enableResetTimerButton(),this.interval=window.setInterval(()=>{const i=w(this.timerState,e);if(i<=0){this.timerState={type:"not_running_no_time_remaining"},clearInterval(this.interval),this.interval=void 0;const r={hourDigitTens:0,hourDigitOnes:0,minuteDigitTens:0,minuteDigitOnes:0,secondDigitTens:0,secondDigitOnes:0,millisecondDigitHundreds:0,millisecondDigitTens:0,millisecondDigitOnes:0};this.updateTimerDisplay(r),this.disableControlButtons(),d(!1),O()}else{this.timerState={type:"running",remainingMs:i};const r=S(i);this.updateTimerDisplay(r)}},e)}pauseTimer(){switch(this.timerState.type){case"running":d(!1),this.timerState={type:"not_running_with_time_remaining",remainingMs:this.timerState.remainingMs},clearInterval(this.interval),this.enableStartTimerButton(),this.disablePauseTimerButton();break;case"not_running_with_time_remaining":case"not_running_no_time_remaining":throw new Error("Cannot pause timer in state: "+this.timerState.type);default:a(this.timerState)}}resetTimer(){switch(this.timerState.type){case"running":case"not_running_with_time_remaining":d(!1),clearInterval(this.interval),this.interval=void 0,this.timerState={type:"not_running_no_time_remaining"};const e=S(0);this.updateTimerDisplay(e),this.enableTimerInputs(),this.disableControlButtons();break;case"not_running_no_time_remaining":throw new Error("Cannot reset timer in state: "+this.timerState.type);default:a(this.timerState)}}enableTimerInputs(){const e=[...document.querySelectorAll('#timer-display input[type="number"]')];for(const i of e)i.removeAttribute("disabled")}updateTimerDisplay(e){for(const[i,r]of Object.entries(e)){const n=v.get(i);c(document.querySelector(`#${n}`)).value=String(r)}}}window.addEventListener("DOMContentLoaded",()=>{new L});
